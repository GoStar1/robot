services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: robot_app
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - robot_network
    depends_on:
      - mysql
      - redis
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-robot}
      - DB_USERNAME=${DB_USERNAME:-robot_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: robot_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # SSL 证书挂载（如果有的话）
      # - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - robot_network
    depends_on:
      - app

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: robot_mysql
    restart: always
    # 生产环境不暴露 3306 端口到宿主机
    # ports:
    #   - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-robot}
      MYSQL_USER: ${DB_USERNAME:-robot_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 0
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - robot_network
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin - 生产环境建议移除
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   container_name: robot_phpmyadmin
  #   restart: unless-stopped
  #   ports:
  #     - "127.0.0.1:8081:80"  # 只允许本地访问
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_PORT: 3306
  #     UPLOAD_LIMIT: 100M
  #   networks:
  #     - robot_network
  #   depends_on:
  #     - mysql

  # Redis
  redis:
    image: redis:7-alpine
    container_name: robot_redis
    restart: always
    # 生产环境不暴露 6379 端口到宿主机
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - robot_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: robot_queue
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - robot_network
    depends_on:
      - app
      - mysql
      - redis
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-robot}
      - DB_USERNAME=${DB_USERNAME:-robot_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Scheduler (Laravel Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: robot_scheduler
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - robot_network
    depends_on:
      - app
      - mysql
      - redis
    command: sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-robot}
      - DB_USERNAME=${DB_USERNAME:-robot_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

networks:
  robot_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
